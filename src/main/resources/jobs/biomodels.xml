<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:bean="http://www.springframework.org/schema/beans" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
		                   http://www.springframework.org/schema/batch
                           http://www.springframework.org/schema/batch/spring-batch.xsd
		                   http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util-3.1.xsd">

    <description>
        This job generate the XML for a BioModels to be submitted to OmicsDI system including download the file and the enrichment.
    </description>

    <import resource="../context/common-context.xml"/>
    <import resource="../context/db-job-repository.xml"/>
    <import resource="../context/mongo-db-context.xml"/>

    <batch:job id="ddiImportJob" xmlns="http://www.springframework.org/schema/batch">

        <!--<batch:step id="downloadFilesStep" parent="parentStep" next="validateXMLStep">
            <batch:tasklet>
            <bean:bean id="downloadFilesTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.io.DownloadFilesFromFTPTasklet">
                <bean:property name="server"          value="${ddi.common.biomodels.ftp.server}" />
                <bean:property name="user"            value="${ddi.common.biomodels.ftp.user}" />
                <bean:property name="password"        value="${ddi.common.biomodels.ftp.password}" />
                <bean:property name="port"            value="${ddi.common.biomodels.ftp.port}" />
                <bean:property name="pattern"         value="${ddi.common.biomodels.ftp.pattern}" />
                <bean:property name="sourceDirectory" value="${ddi.common.biomodels.ftp.folder}" />
                <bean:property name="targetDirectory" value="file:${ddi.common.original.directory}${ddi.common.biomodels.database.index}" />
            </bean:bean>
            </batch:tasklet>
        </batch:step>-->
        <batch:step id="copyFileFromResource" parent="parentStep" next="validateXMLStep">
            <batch:tasklet>
                <bean:bean id="copyFileToDirectoryTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.io.CopyFilesWithPatternFromSourceTasklet">
                    <bean:property name="inputDirectory"      value="file:${ddi.common.biomodels.source.directory}"/>
                    <bean:property name="outputDirectory" value="file:${ddi.common.original.directory}${ddi.common.biomodels.database.index}"/>
                    <bean:property name="pattern" value="${ddi.common.original.pattern}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>
        <batch:step id="validateXMLStep" parent="parentStep" next="splitterStep">
            <batch:tasklet>
                <bean:bean id="validateEbEXmlTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.validation.ValidationOriginalDataTasklet">
                    <bean:property name="directory" value="${ddi.common.original.directory}${ddi.common.biomodels.database.index}"/>
                    <bean:property name="reportName" value="${ddi.common.original.report.name}"/>
                </bean:bean>
            </batch:tasklet>
        </batch:step>


        <batch:step id="splitterStep" parent="parentStep" next="importDataStep">
            <batch:tasklet>
                <bean:bean id="splitterTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.io.SplitterFromSource">
                    <bean:property name="inputDirectory" value="file:${ddi.common.original.directory}${ddi.common.biomodels.database.index}"/>
                    <bean:property name="outputDirectory" value="file:${ddi.common.data.directory}${ddi.common.biomodels.database.index}"/>
                    <bean:property name="originalPrefix"  value="${ddi.common.original.pattern}" />
                    <bean:property name="numberEntries"   value="${ddi.common.multiple.file.number.entries}"/>
                    <bean:property name="filePrefix"      value="${ddi.common.biomodels.prefix}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>


        <batch:step id="importDataStep" parent="parentStep" next="annotationLink">
            <batch:tasklet>
                <bean:bean id="DataImportTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.database.DatasetImportTasklet">
                    <bean:property name="inputDirectory" value="file:${ddi.common.data.directory}${ddi.common.biomodels.database.index}"/>
                    <bean:property name="datasetAnnotationService" ref="datasetAnnotationService" />
                    <bean:property name="databaseAnnotationService" ref="databaseAnnotationService" />
                    <bean:property name="databaseName" value="${ddi.common.biomodels.database.name}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="annotationLink" parent="parentStep" next="annotationFiles">
            <batch:tasklet>
                <bean:bean id="annotationLinkTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.annotation.AnnotateDatasetLinkTaskLet">
                    <bean:property name="databaseName" value="${ddi.common.biomodels.database.name}"/>
                    <bean:property name="datasetAnnotationService" ref="datasetAnnotationService" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="annotationFiles" parent="parentStep" next="enrichmentStep">
            <batch:tasklet>
                <bean:bean id="annotationTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.annotation.AnnotationXMLTasklet">
                    <bean:property name="databaseName" value="${ddi.common.biomodels.database.name}"/>
                    <bean:property name="datasetAnnotationService" ref="datasetAnnotationService" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="enrichmentStep" parent="parentStep" next="datasetFileRetrieve">
            <batch:tasklet>
                <bean:bean id="enrichmentTask" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.enrichment.EnrichmentXMLTasklet">
                    <bean:property name="databaseName" value="${ddi.common.biomodels.database.name}" />
                    <bean:property name="annotationService" ref="annotationService"/>
                    <bean:property name="datasetAnnotationService" ref="datasetAnnotationService" />
                    <bean:property name="databaseAnnotationService" ref="databaseAnnotationService" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="datasetFileRetrieve" parent="parentStep" next="cleanPreprodFolder">
            <batch:tasklet>
                <bean:bean id="retrieveFileUrlStep" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.dataset.DatasetFileUrlRetrieveTasklet">
                    <bean:property name="datasetService" ref="datasetService" />
                    <bean:property name="databaseDetailService" ref="databaseDetailService" />
                    <bean:property name="overwrite" value="false" />
                    <bean:property name="databaseName" value="${ddi.common.biomodels.database.name}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>
        <batch:step id="cleanPreprodFolder" next="moveToPreProductionStep" parent="parentStep">
            <batch:tasklet>
                <bean:bean id="cleanTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.io.CleanDirectoryTasklet">
                    <bean:property name="inputDirectory" value="file:${ddi.common.preprod.directory}${ddi.common.biomodels.database.index}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="moveToPreProductionStep" parent="parentStep" next="cleanImportProdFolder">
            <batch:tasklet>
                <bean:bean id="generateFromSourceTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.database.DatasetExportTasklet">
                    <bean:property name="databaseName" value="${ddi.common.biomodels.database.name}" />
                    <bean:property name="outputDirectory" value="file:${ddi.common.preprod.directory}${ddi.common.biomodels.database.index}"/>
                    <bean:property name="filePrefix"      value="${ddi.common.biomodels.prefix}" />
                    <bean:property name="numberEntries"   value="${ddi.common.multiple.file.number.entries}" />
                    <bean:property name="databaseService" ref="databaseAnnotationService" />
                    <bean:property name="datasetAnnotationService"  ref="datasetAnnotationService" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>
        <batch:step id="cleanImportProdFolder" next="copyIFiletoProd" parent="parentStep">
            <batch:tasklet>
                <bean:bean id="cleanTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.io.CleanDirectoryTasklet">
                    <bean:property name="inputDirectory" value="file:${ddi.common.prod.directory}${ddi.common.biomodels.database.index}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>
        <batch:step id="copyIFiletoProd" parent="parentStep">
            <batch:tasklet>
                <bean:bean id="copyIFileToDirectoryTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.io.CopyFilesWithPatternFromSourceTasklet">
                    <bean:property name="inputDirectory"      value="file:${ddi.common.preprod.directory}${ddi.common.biomodels.database.index}"/>
                    <bean:property name="outputDirectory" value="file:${ddi.common.prod.directory}${ddi.common.biomodels.database.index}"/>
                    <bean:property name="pattern" value="${ddi.common.original.pattern}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>
        <batch:listeners>
            <batch:listener ref="jobListener"/>
        </batch:listeners>
    </batch:job>

    <batch:job id="generatetionJob" xmlns="http://www.springframework.org/schema/batch">
        <batch:step id="cleanGFolder" next="moveToProductionStep" parent="parentStep">
            <batch:tasklet>
                <bean:bean id="cleanTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.io.CleanDirectoryTasklet">
                    <bean:property name="inputDirectory" value="file:${ddi.common.preprod.directory}${ddi.common.biomodels.database.index}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="moveToProductionStep" parent="parentStep" next="cleanGProdFolder">
            <batch:tasklet>
                <bean:bean id="generateFromSourceTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.database.DatasetExportTasklet">
                    <bean:property name="databaseName" value="${ddi.common.biomodels.database.name}" />
                    <bean:property name="outputDirectory" value="file:${ddi.common.preprod.directory}${ddi.common.biomodels.database.index}"/>
                    <bean:property name="filePrefix"      value="${ddi.common.biomodels.prefix}" />
                    <bean:property name="numberEntries"   value="${ddi.common.multiple.file.number.entries}" />
                    <bean:property name="databaseService" ref="databaseAnnotationService" />
                    <bean:property name="datasetAnnotationService"  ref="datasetAnnotationService" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>
        <batch:step id="cleanGProdFolder" next="copyGFiletoProd" parent="parentStep">
            <batch:tasklet>
                <bean:bean id="cleanTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.io.CleanDirectoryTasklet">
                    <bean:property name="inputDirectory" value="file:${ddi.common.prod.directory}${ddi.common.biomodels.database.index}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>
        <batch:step id="copyGFiletoProd" parent="parentStep">
            <batch:tasklet>
                <bean:bean id="copyGFileToDirectoryTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.io.CopyFilesWithPatternFromSourceTasklet">
                    <bean:property name="inputDirectory"      value="file:${ddi.common.preprod.directory}${ddi.common.biomodels.database.index}"/>
                    <bean:property name="outputDirectory" value="file:${ddi.common.prod.directory}${ddi.common.biomodels.database.index}"/>
                    <bean:property name="pattern" value="${ddi.common.original.pattern}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

    </batch:job>

    <batch:step id="parentStep" abstract="true">
        <batch:listeners>
            <batch:listener ref="executionContextPromotionListener"/>
            <batch:listener ref="throwablePromotionListener"/>
        </batch:listeners>
    </batch:step>

    <!--listener for promoting properties in step execution context to job execution context-->
    <bean:bean id="executionContextPromotionListener" class="org.springframework.batch.core.listener.ExecutionContextPromotionListener">
        <bean:property name="keys">
            <bean:array>
                <bean:value>public.path.fragment</bean:value>
                <!-- added by getAndStoreOrigPublicationDateTaskletStep; used by genPublicSearchParamsStep -->
            </bean:array>
        </bean:property>
        <bean:property name="strict" value="false"/>
    </bean:bean>

    <bean:bean id="annotationService" class="uk.ac.ebi.ddi.annotation.service.synonyms.DDIAnnotationService"/>

    <!--load property files-->
    <context:property-placeholder location="classpath:prop/common.properties" ignore-unresolvable="true" order="1"/>

</beans>
