<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:bean="http://www.springframework.org/schema/beans" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
		                   http://www.springframework.org/schema/batch
                           http://www.springframework.org/schema/batch/spring-batch.xsd
		                   http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util-3.1.xsd">

    <description>
        This job generated Panorama Public Datasests file for ProteomeXChange
    </description>

    <import resource="../context/common-context.xml"/>
    <import resource="../context/db-job-repository.xml"/>
    <import resource="../context/mongo-db-context.xml" />

    <batch:job id="ddiImportJob" xmlns="http://www.springframework.org/schema/batch">

        <!--EB-eye XML generation for public project -->
        <batch:step id="genEbEyeXmlStep" parent="parentStep" next="validationXML">
            <batch:tasklet>
                <bean:bean id="genEbEyeXmlTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.generation.GenerateFromAPIOmicsDITasklet">
                    <bean:property name="generator" ref="panoramaGenerator"/>
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="validationXML" parent="parentStep" next="splitterStep">
            <batch:tasklet>
                <bean:bean id="validationXMLTaklet"  scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.validation.ValidationOriginalDataTasklet">
                    <bean:property name="directory"  value="${ddi.common.original.directory}${ddi.common.panorama.database.index}" />
                    <bean:property name="reportName" value="${ddi.common.original.report.name}"/>
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="splitterStep" parent="parentStep" next="importDataStep">
            <batch:tasklet>
                <bean:bean id="splitterTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.io.SplitterFromSource">
                    <bean:property name="inputDirectory"  value="file:${ddi.common.original.directory}${ddi.common.panorama.database.index}"/>
                    <bean:property name="outputDirectory" value="file:${ddi.common.data.directory}${ddi.common.panorama.database.index}"/>
                    <bean:property name="originalPrefix"  value="${ddi.common.px.original.prefix}" />
                    <bean:property name="numberEntries"   value="${ddi.common.multiple.file.number.entries}"/>
                    <bean:property name="filePrefix"      value="${ddi.common.panorama.prefix}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="importDataStep" parent="parentStep" next="annotationFiles">
            <batch:tasklet>
                <bean:bean id="DataImportTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.database.DatasetImportTasklet">
                    <bean:property name="inputDirectory" value="file:${ddi.common.data.directory}${ddi.common.panorama.database.index}"/>
                    <bean:property name="datasetAnnotationService" ref="datasetAnnotationService" />
                    <bean:property name="databaseAnnotationService" ref="databaseAnnotationService" />
                    <bean:property name="databaseName" value="${ddi.common.panorama.database.name}" />
                    <bean:property name="updateStatus" value="false" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="annotationFiles" parent="parentStep" next="enrichmentStep">
            <batch:tasklet>
                <bean:bean id="annotationTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.annotation.AnnotationXMLTasklet">
                    <bean:property name="databaseName" value="${ddi.common.panorama.database.name}"/>
                    <bean:property name="datasetAnnotationService" ref="datasetAnnotationService" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="enrichmentStep" parent="parentStep" next="datasetFileRetrieve">
            <batch:tasklet>
                <bean:bean id="enrichmentTask" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.enrichment.EnrichmentXMLTasklet">
                    <bean:property name="databaseName"             value="${ddi.common.panorama.database.name}" />
                    <bean:property name="annotationService"        ref="annotationService"/>
                    <bean:property name="datasetAnnotationService" ref="datasetAnnotationService" />
                    <bean:property name="databaseAnnotationService" ref="databaseAnnotationService" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="datasetFileRetrieve" parent="parentStep" next="cleanIPreProdStep">
            <batch:tasklet>
                <bean:bean id="retrieveFileUrlStep" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.dataset.DatasetFileUrlRetrieveTasklet">
                    <bean:property name="datasetService" ref="datasetService" />
                    <bean:property name="databaseDetailService" ref="databaseDetailService" />
                    <bean:property name="overwrite" value="false" />
                    <bean:property name="databaseName"             value="${ddi.common.panorama.database.name}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="cleanIPreProdStep" next="moveToProductionStep" parent="parentStep">
            <batch:tasklet>
                <bean:bean id="cleanTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.io.CleanDirectoryTasklet">
                    <bean:property name="inputDirectory"  value="file:${ddi.common.preprod.directory}${ddi.common.panorama.database.index}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="moveToProductionStep" parent="parentStep" next="cleanIProdFolder">
            <batch:tasklet>
                <bean:bean id="generateFromSourceTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.database.DatasetExportTasklet">
                    <bean:property name="databaseName" value="${ddi.common.panorama.database.name}" />
                    <bean:property name="outputDirectory" value="file:${ddi.common.preprod.directory}${ddi.common.panorama.database.index}"/>
                    <bean:property name="filePrefix"      value="${ddi.common.panorama.prefix}" />
                    <bean:property name="numberEntries"   value="${ddi.common.multiple.file.number.entries}" />
                    <bean:property name="databaseService" ref="databaseAnnotationService" />
                    <bean:property name="datasetAnnotationService"  ref="datasetAnnotationService" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>
        <batch:step id="cleanIProdFolder" next="copyIFiletoProd" parent="parentStep">
            <batch:tasklet>
                <bean:bean id="cleanIProdTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.io.CleanDirectoryTasklet">
                    <bean:property name="inputDirectory" value="file:${ddi.common.prod.directory}/${ddi.common.panorama.database.index}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="copyIFiletoProd" parent="parentStep">
            <batch:tasklet>
                <bean:bean id="copyIFileToDirectoryTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.io.CopyFilesWithPatternFromSourceTasklet">
                    <bean:property name="inputDirectory"      value="file:${ddi.common.preprod.directory}/${ddi.common.panorama.database.index}"/>
                    <bean:property name="outputDirectory" value="file:${ddi.common.prod.directory}/${ddi.common.panorama.database.index}"/>
                    <bean:property name="pattern" value="${ddi.common.original.pattern}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:listeners>
            <batch:listener ref="jobListener"/>
        </batch:listeners>
    </batch:job>

    <batch:job id="ddiMongoJob" xmlns="http://www.springframework.org/schema/batch">

        <batch:step id="validationXMLMongo" parent="parentStep" next="splitterStepMongo">
            <batch:tasklet>
                <bean:bean id="validationXMLTaklet"  scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.validation.ValidationOriginalDataTasklet">
                    <bean:property name="directory"  value="${ddi.common.original.directory}${ddi.common.panorama.database.index}" />
                    <bean:property name="reportName" value="${ddi.common.original.report.name}"/>
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="splitterStepMongo" parent="parentStep" next="importDataStepMongo">
            <batch:tasklet>
                <bean:bean id="splitterTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.io.SplitterFromSource">
                    <bean:property name="inputDirectory"  value="file:${ddi.common.original.directory}${ddi.common.panorama.database.index}"/>
                    <bean:property name="outputDirectory" value="file:${ddi.common.data.directory}${ddi.common.panorama.database.index}"/>
                    <bean:property name="originalPrefix"  value="${ddi.common.px.original.prefix}" />
                    <bean:property name="numberEntries"   value="${ddi.common.multiple.file.number.entries}"/>
                    <bean:property name="filePrefix"      value="${ddi.common.panorama.prefix}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="importDataStepMongo" parent="parentStep" next="annotationFilesMongo">
            <batch:tasklet>
                <bean:bean id="DataImportTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.database.DatasetImportTasklet">
                    <bean:property name="inputDirectory" value="file:${ddi.common.data.directory}${ddi.common.panorama.database.index}"/>
                    <bean:property name="datasetAnnotationService" ref="datasetAnnotationService" />
                    <bean:property name="databaseAnnotationService" ref="databaseAnnotationService" />
                    <bean:property name="databaseName" value="${ddi.common.panorama.database.name}" />
                    <bean:property name="updateStatus" value="false" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="annotationFilesMongo" parent="parentStep" next="enrichmentStepMongo">
            <batch:tasklet>
                <bean:bean id="annotationTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.annotation.AnnotationXMLTasklet">
                    <bean:property name="databaseName" value="${ddi.common.panorama.database.name}"/>
                    <bean:property name="datasetAnnotationService" ref="datasetAnnotationService" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="enrichmentStepMongo" parent="parentStep" next="datasetFileRetrieveMongo">
            <batch:tasklet>
                <bean:bean id="enrichmentTask" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.enrichment.EnrichmentXMLTasklet">
                    <bean:property name="databaseName"             value="${ddi.common.panorama.database.name}" />
                    <bean:property name="annotationService"        ref="annotationService"/>
                    <bean:property name="datasetAnnotationService" ref="datasetAnnotationService" />
                    <bean:property name="databaseAnnotationService" ref="databaseAnnotationService" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="datasetFileRetrieveMongo" parent="parentStep" next="cleanIPreProdStepMongo">
            <batch:tasklet>
                <bean:bean id="retrieveFileUrlStep" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.dataset.DatasetFileUrlRetrieveTasklet">
                    <bean:property name="datasetService" ref="datasetService" />
                    <bean:property name="databaseDetailService" ref="databaseDetailService" />
                    <bean:property name="overwrite" value="false" />
                    <bean:property name="databaseName"             value="${ddi.common.panorama.database.name}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="cleanIPreProdStepMongo" next="moveToProductionStepMongo" parent="parentStep">
            <batch:tasklet>
                <bean:bean id="cleanTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.io.CleanDirectoryTasklet">
                    <bean:property name="inputDirectory"  value="file:${ddi.common.preprod.directory}${ddi.common.panorama.database.index}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="moveToProductionStepMongo" parent="parentStep" next="cleanIProdFolderMongo">
            <batch:tasklet>
                <bean:bean id="generateFromSourceTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.database.DatasetExportTasklet">
                    <bean:property name="databaseName" value="${ddi.common.panorama.database.name}" />
                    <bean:property name="outputDirectory" value="file:${ddi.common.preprod.directory}${ddi.common.panorama.database.index}"/>
                    <bean:property name="filePrefix"      value="${ddi.common.panorama.prefix}" />
                    <bean:property name="numberEntries"   value="${ddi.common.multiple.file.number.entries}" />
                    <bean:property name="databaseService" ref="databaseAnnotationService" />
                    <bean:property name="datasetAnnotationService"  ref="datasetAnnotationService" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>
        <batch:step id="cleanIProdFolderMongo" next="copyIFiletoProdMongo" parent="parentStep">
            <batch:tasklet>
                <bean:bean id="cleanIProdTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.io.CleanDirectoryTasklet">
                    <bean:property name="inputDirectory" value="file:${ddi.common.prod.directory}/${ddi.common.panorama.database.index}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="copyIFiletoProdMongo" parent="parentStep">
            <batch:tasklet>
                <bean:bean id="copyIFileToDirectoryTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.io.CopyFilesWithPatternFromSourceTasklet">
                    <bean:property name="inputDirectory"      value="file:${ddi.common.preprod.directory}/${ddi.common.panorama.database.index}"/>
                    <bean:property name="outputDirectory" value="file:${ddi.common.prod.directory}/${ddi.common.panorama.database.index}"/>
                    <bean:property name="pattern" value="${ddi.common.original.pattern}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:listeners>
            <batch:listener ref="jobListener"/>
        </batch:listeners>
    </batch:job>


    <batch:job id="generatetionJob" xmlns="http://www.springframework.org/schema/batch">

        <batch:step id="cleanGPreProdStepJob" next="moveToProductionStepJob" parent="parentStep">
            <batch:tasklet>
                <bean:bean id="cleanGPreProdTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.io.CleanDirectoryTasklet">
                    <bean:property name="inputDirectory" value="file:${ddi.common.preprod.directory}${ddi.common.panorama.database.index}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="moveToProductionStepJob" parent="parentStep" next="cleanGProdFolder">
            <batch:tasklet>
                <bean:bean id="generateFromSourceTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.database.DatasetExportTasklet">
                    <bean:property name="databaseName" value="${ddi.common.panorama.database.name}" />
                    <bean:property name="outputDirectory" value="file:${ddi.common.preprod.directory}${ddi.common.panorama.database.index}"/>
                    <bean:property name="filePrefix"      value="${ddi.common.panorama.prefix}" />
                    <bean:property name="numberEntries"   value="${ddi.common.multiple.file.number.entries}" />
                    <bean:property name="databaseService" ref="databaseAnnotationService" />
                    <bean:property name="datasetAnnotationService"  ref="datasetAnnotationService" />
                </bean:bean>
            </batch:tasklet>

        </batch:step>
        <batch:step id="cleanGProdFolder" next="copyGFiletoProd" parent="parentStep">
            <batch:tasklet>
                <bean:bean id="cleanGProdTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.io.CleanDirectoryTasklet">
                    <bean:property name="inputDirectory" value="file:${ddi.common.prod.directory}/${ddi.common.panorama.database.index}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="copyGFiletoProd" parent="parentStep">
            <batch:tasklet>
                <bean:bean id="copyGFileToDirectoryTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.io.CopyFilesWithPatternFromSourceTasklet">
                    <bean:property name="inputDirectory"      value="file:${ddi.common.preprod.directory}/${ddi.common.panorama.database.index}"/>
                    <bean:property name="outputDirectory" value="file:${ddi.common.prod.directory}/${ddi.common.panorama.database.index}"/>
                    <bean:property name="pattern" value="${ddi.common.original.pattern}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <batch:step id="parentStep" abstract="true">
        <batch:listeners>
            <batch:listener ref="executionContextPromotionListener"/>
            <batch:listener ref="throwablePromotionListener"/>
        </batch:listeners>
    </batch:step>

    <!--listener for promoting properties in step execution context to job execution context-->
    <bean:bean id="executionContextPromotionListener" class="org.springframework.batch.core.listener.ExecutionContextPromotionListener">
        <bean:property name="keys">
            <bean:array>
                <bean:value>public.path.fragment</bean:value>
                <!-- added by getAndStoreOrigPublicationDateTaskletStep; used by genPublicSearchParamsStep -->
            </bean:array>
        </bean:property>
        <bean:property name="strict" value="false"/>
    </bean:bean>

    <bean id="dataTypesProteomics" class="java.util.ArrayList">
        <constructor-arg>
            <list>
                <util:constant static-field="uk.ac.ebi.ddi.annotation.utils.DataType.PROTEOMICS_DATA"/>
            </list>
        </constructor-arg>
    </bean>


    <bean:bean id="annotationService" class="uk.ac.ebi.ddi.annotation.service.synonyms.DDIAnnotationService"/>

    <bean:bean id="panoramaGenerator" class="uk.ac.ebi.ddi.api.readers.px.GeneratePxOmicsXML">
        <constructor-arg index="0" value="${ddi.common.px.loop.gap}"/>
        <constructor-arg index="1" value="${ddi.common.px.loop.end}"/>
        <constructor-arg index="2" value="${ddi.common.px.acc.prefix}"/>
        <constructor-arg index="3" value="${ddi.common.px.url}"/>
        <constructor-arg index="4" value="${ddi.common.original.directory}${ddi.common.panorama.database.index}"/>
        <constructor-arg index="5" ref="pxPanorama"/>
        <constructor-arg index="6" value="#{currentDate}"/>
    </bean:bean>

    <bean id="pxPanorama" class="java.util.ArrayList">
        <constructor-arg>
            <list>
                <value>PanoramaPublic</value>
            </list>
        </constructor-arg>
    </bean>


    <!--load property files-->
    <context:property-placeholder location="classpath:prop/common.properties" ignore-unresolvable="true" order="1"/>


</beans>
